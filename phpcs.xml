<?xml version="1.0"?>
<ruleset name="custom">
    <description>Custom PHPCS standard.</description>

    <!-- Using Drupal coding standard as a base-fix. -->
    <rule ref="Drupal">
        <exclude name="Drupal.Commenting.DocComment.MissingShort"/>
    </rule>
    <!-- Checks that the strict_types has been declared. -->
    <rule ref="Generic.PHP.RequireStrictTypes" />

    <!-- Show sniff codes in all reports -->
    <arg value="s"/>
    <!-- Show progress of the run. -->
    <arg value="p"/>
    <arg name="colors"/>

    <!--
    PHP_CodeSniffer does not support scanning of files without extensions, so
    we have to use the ugly workaround to copy the file into a file with a 'php'
    extension, scan that file, and then delete it.
    @see https://github.com/squizlabs/PHP_CodeSniffer/issues/2916
    -->
    <file>Str2Name.php</file>
    <file>docs.php</file>
    <file>tests/phpunit</file>

    <!-- Allow long array lines in tests. -->
    <rule ref="Drupal.Arrays.Array.LongLineDeclaration">
        <exclude-pattern>*.Test\.php</exclude-pattern>
        <exclude-pattern>*.TestCase\.php</exclude-pattern>
        <exclude-pattern>*.test</exclude-pattern>
    </rule>

    <!-- Allow missing class names in tests. -->
    <rule ref="Drupal.Commenting.ClassComment.Missing">
        <exclude-pattern>*.Test\.php</exclude-pattern>
        <exclude-pattern>*.TestCase\.php</exclude-pattern>
        <exclude-pattern>*.test</exclude-pattern>
    </rule>

    <!-- Allow missing function names in tests. -->
    <rule ref="Drupal.Commenting.FunctionComment.Missing">
        <exclude-pattern>*.Test\.php</exclude-pattern>
        <exclude-pattern>*.TestCase\.php</exclude-pattern>
        <exclude-pattern>*.test</exclude-pattern>
    </rule>

    <!-- Allow missing property names in tests. -->
    <rule ref="Drupal.Commenting.VariableComment.Missing">
        <exclude-pattern>*.Test\.php</exclude-pattern>
        <exclude-pattern>*.TestCase\.php</exclude-pattern>
        <exclude-pattern>*.test</exclude-pattern>
    </rule>
</ruleset>
